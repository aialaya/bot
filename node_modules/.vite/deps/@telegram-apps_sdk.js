import "./chunk-RZ55PUNP.js";

// node_modules/@telegram-apps/sdk/dist/index.js
var ie = class vn extends Error {
  constructor(t, n, s) {
    super(
      typeof n == "object" ? n.message : n || t,
      {
        cause: typeof n == "object" ? n.cause : s
      }
    ), this.type = t, Object.setPrototypeOf(this, vn.prototype);
  }
};
function Tn(e) {
  return e.replace(/[A-Z]/g, (t) => `_${t.toLowerCase()}`);
}
function Ho(e) {
  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());
}
var qo = "ERR_INVALID_VALUE";
var Wo = "ERR_UNEXPECTED_VALUE";
var zo = "ERR_UNEXPECTED_TYPE";
var An = "ERR_PARSE";
function Rn(e, t) {
  const n = {};
  for (const s in e) {
    const o = e[s];
    if (!o)
      continue;
    let r, a;
    typeof o == "function" ? (r = s, a = o) : [r, a] = o;
    try {
      const i = a(t(r));
      i !== void 0 && (n[s] = i);
    } catch (i) {
      throw new ie(
        An,
        `Parser for "${s}" property failed${r === s ? "" : `. Source field: "${r}"`}`,
        i
      );
    }
  }
  return n;
}
function Pn(e) {
  let t = e;
  if (typeof t == "string")
    try {
      t = JSON.parse(t);
    } catch (n) {
      throw new ie(qo, { cause: n });
    }
  if (typeof t != "object" || !t || Array.isArray(t))
    throw new ie(Wo);
  return t;
}
function U(e, t) {
  return (n) => {
    const s = (o) => {
      if (!(n && o === void 0))
        try {
          return t(o);
        } catch (r) {
          throw new ie(An, {
            message: `"${e}" transformer failed to parse the value`,
            cause: r
          });
        }
    };
    return Object.assign(
      s,
      {
        isValid(o) {
          try {
            return s(o), true;
          } catch {
            return false;
          }
        }
      }
    );
  };
}
function Ne(e, t) {
  return U(t || "object", (n) => {
    const s = Pn(n);
    return Rn(e, (o) => s[o]);
  });
}
function Se(e) {
  throw new ie(zo, `Unexpected value received: ${JSON.stringify(e)}`);
}
var Go = U("boolean", (e) => {
  if (typeof e == "boolean")
    return e;
  const t = String(e);
  if (t === "1" || t === "true")
    return true;
  if (t === "0" || t === "false")
    return false;
  Se(e);
});
var L = U("string", (e) => {
  if (typeof e == "string" || typeof e == "number")
    return e.toString();
  Se(e);
});
var ke = U("number", (e) => {
  if (typeof e == "number")
    return e;
  if (typeof e == "string") {
    const t = Number(e);
    if (!Number.isNaN(t))
      return t;
  }
  Se(e);
});
var Tt = U("date", (e) => e instanceof Date ? e : new Date(ke()(e) * 1e3));
function On(e, t) {
  return U(t || "searchParams", (n) => {
    typeof n != "string" && !(n instanceof URLSearchParams) && Se(n);
    const s = typeof n == "string" ? new URLSearchParams(n) : n;
    return Rn(e, (o) => {
      const r = s.get(o);
      return r === null ? void 0 : r;
    });
  });
}
function it(e) {
  for (const t in e)
    e[t] = [Tn(t), e[t]];
  return e;
}
var Fo = (e) => {
  const t = ke(), n = ke(true), s = L(), o = L(true), r = Go(true), a = Ne(it({
    addedToAttachmentMenu: r,
    allowsWriteToPm: r,
    firstName: s,
    id: t,
    isBot: r,
    isPremium: r,
    languageCode: o,
    lastName: o,
    photoUrl: o,
    username: o
  }), "User")(true);
  return On(
    it({
      authDate: Tt(),
      canSendAfter: n,
      chat: Ne(
        it({
          id: t,
          type: s,
          title: s,
          photoUrl: o,
          username: o
        }),
        "Chat"
      )(true),
      chatInstance: o,
      chatType: o,
      hash: s,
      queryId: o,
      receiver: a,
      startParam: o,
      user: a
    }),
    "initData"
  )(e);
};
function ce(e) {
  return /^#[\da-f]{6}$/i.test(e);
}
function Jo(e) {
  return /^#[\da-f]{3}$/i.test(e);
}
function Bn(e) {
  const t = e.replace(/\s/g, "").toLowerCase();
  if (ce(t))
    return t;
  if (Jo(t)) {
    let s = "#";
    for (let o = 0; o < 3; o += 1)
      s += t[1 + o].repeat(2);
    return s;
  }
  const n = t.match(/^rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)$/) || t.match(/^rgba\((\d{1,3}),(\d{1,3}),(\d{1,3}),\d{1,3}\)$/);
  if (!n)
    throw new Error(`Value "${e}" does not satisfy any of known RGB formats.`);
  return n.slice(1).reduce((s, o) => {
    const r = parseInt(o, 10).toString(16);
    return s + (r.length === 1 ? "0" : "") + r;
  }, "#");
}
var Qo = U("rgb", (e) => Bn(L()(e)));
var Yo = U(
  "themeParams",
  (e) => {
    const t = Qo(true);
    return Object.entries(Pn(e)).reduce((n, [s, o]) => (n[Ho(s)] = t(o), n), {});
  }
);
function Ko(e) {
  return JSON.stringify(
    Object.fromEntries(
      Object.entries(e).map(([t, n]) => [Tn(t), n])
    )
  );
}
function Ni(e) {
  const { initDataRaw: t, startParam: n, showSettings: s, botInline: o } = e, r = new URLSearchParams();
  return r.set("tgWebAppPlatform", e.platform), r.set("tgWebAppThemeParams", Ko(e.themeParams)), r.set("tgWebAppVersion", e.version), t && r.set("tgWebAppData", t), n && r.set("tgWebAppStartParam", n), typeof s == "boolean" && r.set("tgWebAppShowSettings", s ? "1" : "0"), typeof o == "boolean" && r.set("tgWebAppBotInline", o ? "1" : "0"), r.toString();
}
function Zo(e, t) {
  return U("array", (n) => {
    let s;
    if (Array.isArray(n))
      s = n;
    else if (typeof n == "string")
      try {
        const o = JSON.parse(n);
        Array.isArray(o) && (s = o);
      } catch {
      }
    return s || Se(n), s.map(e);
  });
}
function Mn(e) {
  return !!e && typeof e == "object" && !Array.isArray(e);
}
function _t(...e) {
  return e.map((t) => {
    if (typeof t == "string")
      return t;
    if (Mn(t))
      return _t(Object.entries(t).map((n) => n[1] && n[0]));
    if (Array.isArray(t))
      return _t(...t);
  }).filter(Boolean).join(" ");
}
function ki(...e) {
  return e.reduce((t, n) => (Mn(n) && Object.entries(n).forEach(([s, o]) => {
    const r = _t(t[s], o);
    r && (t[s] = r);
  }), t), {});
}
var ue = class Dn extends Error {
  constructor(t, n, s) {
    super(
      typeof n == "object" ? n.message : n || t,
      {
        cause: typeof n == "object" ? n.cause : s
      }
    ), this.type = t, Object.setPrototypeOf(this, Dn.prototype);
  }
};
function Nn(e) {
  return e.replace(/[A-Z]/g, (t) => `_${t.toLowerCase()}`);
}
function Xo(e) {
  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());
}
var es = "ERR_INVALID_VALUE";
var ts = "ERR_UNEXPECTED_VALUE";
var ns = "ERR_UNEXPECTED_TYPE";
var kn = "ERR_PARSE";
function xn(e, t) {
  const n = {};
  for (const s in e) {
    const o = e[s];
    if (!o)
      continue;
    let r, a;
    typeof o == "function" ? (r = s, a = o) : [r, a] = o;
    try {
      const i = a(t(r));
      i !== void 0 && (n[s] = i);
    } catch (i) {
      throw new ue(
        kn,
        `Parser for "${s}" property failed${r === s ? "" : `. Source field: "${r}"`}`,
        i
      );
    }
  }
  return n;
}
function In(e) {
  let t = e;
  if (typeof t == "string")
    try {
      t = JSON.parse(t);
    } catch (n) {
      throw new ue(es, { cause: n });
    }
  if (typeof t != "object" || !t || Array.isArray(t))
    throw new ue(ts);
  return t;
}
function B(e, t) {
  return (n) => {
    const s = (o) => {
      if (!(n && o === void 0))
        try {
          return t(o);
        } catch (r) {
          throw new ue(kn, {
            message: `"${e}" transformer failed to parse the value`,
            cause: r
          });
        }
    };
    return Object.assign(
      s,
      {
        isValid(o) {
          try {
            return s(o), true;
          } catch {
            return false;
          }
        }
      }
    );
  };
}
function P(e, t) {
  return B(t || "object", (n) => {
    const s = In(n);
    return xn(e, (o) => s[o]);
  });
}
function Ce(e) {
  throw new ue(ns, `Unexpected value received: ${JSON.stringify(e)}`);
}
var xe = B("boolean", (e) => {
  if (typeof e == "boolean")
    return e;
  const t = String(e);
  if (t === "1" || t === "true")
    return true;
  if (t === "0" || t === "false")
    return false;
  Ce(e);
});
var v = B("string", (e) => {
  if (typeof e == "string" || typeof e == "number")
    return e.toString();
  Ce(e);
});
var pe = B("number", (e) => {
  if (typeof e == "number")
    return e;
  if (typeof e == "string") {
    const t = Number(e);
    if (!Number.isNaN(t))
      return t;
  }
  Ce(e);
});
var os = B("date", (e) => e instanceof Date ? e : new Date(pe()(e) * 1e3));
function Vn(e, t) {
  return B(t || "searchParams", (n) => {
    typeof n != "string" && !(n instanceof URLSearchParams) && Ce(n);
    const s = typeof n == "string" ? new URLSearchParams(n) : n;
    return xn(e, (o) => {
      const r = s.get(o);
      return r === null ? void 0 : r;
    });
  });
}
function ct(e) {
  for (const t in e)
    e[t] = [Nn(t), e[t]];
  return e;
}
var ss = (e) => {
  const t = pe(), n = pe(true), s = v(), o = v(true), r = xe(true), a = P(ct({
    addedToAttachmentMenu: r,
    allowsWriteToPm: r,
    firstName: s,
    id: t,
    isBot: r,
    isPremium: r,
    languageCode: o,
    lastName: o,
    photoUrl: o,
    username: o
  }), "User")(true);
  return Vn(
    ct({
      authDate: os(),
      canSendAfter: n,
      chat: P(
        ct({
          id: t,
          type: s,
          title: s,
          photoUrl: o,
          username: o
        }),
        "Chat"
      )(true),
      chatInstance: o,
      chatType: o,
      hash: s,
      queryId: o,
      receiver: a,
      startParam: o,
      user: a
    }),
    "initData"
  )(e);
};
function rs(e) {
  return /^#[\da-f]{6}$/i.test(e);
}
function as(e) {
  return /^#[\da-f]{3}$/i.test(e);
}
function is(e) {
  const t = e.replace(/\s/g, "").toLowerCase();
  if (rs(t))
    return t;
  if (as(t)) {
    let s = "#";
    for (let o = 0; o < 3; o += 1)
      s += t[1 + o].repeat(2);
    return s;
  }
  const n = t.match(/^rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)$/) || t.match(/^rgba\((\d{1,3}),(\d{1,3}),(\d{1,3}),\d{1,3}\)$/);
  if (!n)
    throw new Error(`Value "${e}" does not satisfy any of known RGB formats.`);
  return n.slice(1).reduce((s, o) => {
    const r = parseInt(o, 10).toString(16);
    return s + (r.length === 1 ? "0" : "") + r;
  }, "#");
}
var cs = B("rgb", (e) => is(v()(e)));
var us = B(
  "themeParams",
  (e) => {
    const t = cs(true);
    return Object.entries(In(e)).reduce((n, [s, o]) => (n[Xo(s)] = t(o), n), {});
  }
);
function Ln(e) {
  return JSON.stringify(
    Object.fromEntries(
      Object.entries(e).map(([t, n]) => [Nn(t), n])
    )
  );
}
var ps = (e) => {
  const t = v(), n = v(true), s = xe(true);
  return Vn({
    botInline: ["tgWebAppBotInline", s],
    initData: ["tgWebAppData", ss(true)],
    initDataRaw: ["tgWebAppData", n],
    platform: ["tgWebAppPlatform", t],
    showSettings: ["tgWebAppShowSettings", s],
    startParam: ["tgWebAppStartParam", n],
    themeParams: ["tgWebAppThemeParams", us()],
    version: ["tgWebAppVersion", t]
  }, "launchParams")(e);
};
function ls(e) {
  const { initDataRaw: t, startParam: n, showSettings: s, botInline: o } = e, r = new URLSearchParams();
  return r.set("tgWebAppPlatform", e.platform), r.set("tgWebAppThemeParams", Ln(e.themeParams)), r.set("tgWebAppVersion", e.version), t && r.set("tgWebAppData", t), n && r.set("tgWebAppStartParam", n), typeof s == "boolean" && r.set("tgWebAppShowSettings", s ? "1" : "0"), typeof o == "boolean" && r.set("tgWebAppBotInline", o ? "1" : "0"), r.toString();
}
var Un = P({
  eventType: v(),
  eventData: (e) => e
}, "miniAppsMessage");
var jn = B("fn", (e) => {
  if (typeof e == "function")
    return e;
  Ce(e);
});
function ds(e) {
  return !!e && typeof e == "object" && !Array.isArray(e);
}
var fs = P({
  TelegramWebviewProxy: P({ postEvent: jn() })()
});
function Hn(e) {
  return fs().isValid(e);
}
function _s() {
  try {
    return window.self !== window.top;
  } catch {
    return true;
  }
}
var ms = Object.defineProperty;
var hs = (e, t, n) => t in e ? ms(e, t, { enumerable: true, configurable: true, writable: true, value: n }) : e[t] = n;
var qn = (e, t, n) => hs(e, typeof t != "symbol" ? t + "" : t, n);
var l = class Wn extends Error {
  constructor(t, n, s) {
    super(
      typeof n == "object" ? n.message : n || t,
      {
        cause: typeof n == "object" ? n.cause : s
      }
    ), this.type = t, Object.setPrototypeOf(this, Wn.prototype);
  }
};
function mt(e, t, n) {
  return e.addEventListener(t, n), () => e.removeEventListener(t, n);
}
function K(...e) {
  const t = e.flat(1);
  return [
    t.push.bind(t),
    () => {
      t.forEach((n) => {
        n();
      });
    }
  ];
}
function bs(e, t) {
  return e instanceof l && e.type === t;
}
function At(e) {
  return (t) => bs(t, e);
}
var zn = "ERR_ABORTED";
var Gn = "ERR_CANCELED";
var Fn = "ERR_TIMED_OUT";
function pn(e) {
  return new l(zn, { cause: e });
}
var xi = At(Fn);
var Ii = At(zn);
var Vi = At(Gn);
function ln(e, t) {
  return e.reject = t.reject, e;
}
var g = class _g extends Promise {
  constructor(t, n) {
    let s, o;
    typeof t == "function" ? (s = t, o = n) : o = t;
    let r, a;
    super((i, p) => {
      o || (o = {});
      const { abortSignal: c } = o;
      if (c && c.aborted)
        return p(pn(c.reason));
      const [f, b] = K(), w = (_) => (...W) => (b(), _(...W)), I = new AbortController(), { signal: S } = I;
      a = w((_) => {
        I.abort(_), p(_);
      }), r = w(i), c && f(
        mt(c, "abort", () => {
          a(pn(c.reason));
        })
      );
      const { timeout: h } = o;
      if (h) {
        const _ = setTimeout(() => {
          a(new l(Fn, `Timeout reached: ${h}ms`));
        }, h);
        f(() => {
          clearTimeout(_);
        });
      }
      s && s(r, a, S);
    }), qn(this, "reject"), this.reject = a;
  }
  /**
   * Creates a new BetterPromise instance using executor, resolving promise when a result
   * was returned.
   * @param fn - function returning promise result.
   * @param options - additional options.
   */
  static withFn(t, n) {
    return new _g((s, o, r) => {
      try {
        const a = t(r);
        return a instanceof Promise ? a.then(s, o) : s(a);
      } catch (a) {
        o(a);
      }
    }, n);
  }
  /**
   * @see Promise.resolve
   */
  static resolve(t) {
    return new _g((n) => {
      n(t);
    });
  }
  /**
   * @see Promise.reject
   */
  static reject(t) {
    return new _g((n, s) => {
      s(t);
    });
  }
  /**
   * Cancels the promise execution.
   */
  cancel() {
    this.reject(new l(Gn));
  }
  /**
   * @see Promise.catch
   */
  catch(t) {
    return this.then(void 0, t);
  }
  /**
   * @see Promise.finally
   */
  finally(t) {
    return ln(super.finally(t), this);
  }
  /**
   * @see Promise.then
   */
  then(t, n) {
    return ln(super.then(t, n), this);
  }
};
function dn(e, t) {
  return e.resolve = t.resolve, e;
}
var oe = class _oe extends g {
  constructor(t, n) {
    let s, o;
    typeof t == "function" ? (s = t, o = n) : o = t;
    let r;
    super((a, i, p) => {
      r = a, s && s(a, i, p);
    }, o), qn(this, "resolve"), this.resolve = r;
  }
  /**
   * Creates a new EnhancedPromise instance using executor, resolving promise when a result
   * was returned.
   * @param fn - function returning promise result.
   * @param options - additional options.
   */
  static withFn(t, n) {
    return new _oe(
      (s, o, r) => g.withFn(t, { abortSignal: r }).then(s, o),
      n
    );
  }
  /**
   * @see Promise.resolve
   */
  static resolve(t) {
    return new _oe((n) => {
      n(t);
    });
  }
  /**
   * @see Promise.reject
   */
  static reject(t) {
    return new _oe((n, s) => {
      s(t);
    });
  }
  /**
   * @see Promise.catch
   */
  catch(t) {
    return this.then(void 0, t);
  }
  /**
   * @see Promise.finally
   */
  finally(t) {
    return dn(super.finally(t), this);
  }
  /**
   * @see Promise.then
   */
  then(t, n) {
    return dn(super.then(t, n), this);
  }
};
function gs(e, t) {
  return new g((n) => {
    setTimeout(n, e);
  }, { abortSignal: t });
}
function Jn(e) {
  return `tapps/${e}`;
}
function T(e, t) {
  sessionStorage.setItem(Jn(e), JSON.stringify(t));
}
function A(e) {
  const t = sessionStorage.getItem(Jn(e));
  try {
    return t ? JSON.parse(t) : void 0;
  } catch {
  }
}
function Rt(e) {
  return e.replace(/[A-Z]/g, (t) => `-${t.toLowerCase()}`);
}
function ws(e, t) {
  t || (t = {});
  const {
    textColor: n,
    bgColor: s,
    shouldLog: o = true
  } = t;
  function r(a, ...i) {
    if (!o || typeof o == "function" && !o())
      return;
    const p = "font-weight:bold;padding:0 5px;border-radius:5px";
    console[a](
      `%c${Intl.DateTimeFormat("en-GB", {
        hour: "2-digit",
        minute: "2-digit",
        second: "2-digit",
        fractionalSecondDigits: 3,
        timeZone: "UTC"
      }).format(/* @__PURE__ */ new Date())}%c / %c${e}`,
      `${p};background-color: lightblue;color:black`,
      "",
      `${p};${n ? `color:${n};` : ""}${s ? `background-color:${s}` : ""}`,
      ...i
    );
  }
  return [
    function(...a) {
      r("log", ...a);
    },
    function(...a) {
      r("error", ...a);
    }
  ];
}
function Pt(e, t) {
  document.documentElement.style.setProperty(e, t);
}
function Ot(e) {
  document.documentElement.style.removeProperty(e);
}
function Es(e, t) {
  t();
}
function Z(e, t) {
  t || (t = {});
  const n = t.equals || Object.is;
  let s = [], o = e;
  const r = (c) => {
    if (!n(o, c)) {
      const f = o;
      o = c, Es(p, () => {
        [...s].forEach(([b, w]) => {
          b(c, f), w && i(b, true);
        });
      });
    }
  };
  function a(c) {
    const f = typeof c != "object" ? { once: c } : c;
    return {
      once: f.once || false,
      signal: f.signal || false
    };
  }
  const i = (c, f) => {
    const b = a(f), w = s.findIndex(([I, S]) => I === c && S.once === b.once && S.signal === b.signal);
    w >= 0 && s.splice(w, 1);
  }, p = Object.assign(
    function() {
      return ys(p), o;
    },
    {
      destroy() {
        s = [];
      },
      set: r,
      reset() {
        r(e);
      },
      sub(c, f) {
        return s.push([c, a(f)]), () => i(c, f);
      },
      unsub: i,
      unsubAll() {
        s = s.filter((c) => c[1].signal);
      }
    }
  );
  return p;
}
var ut = [];
function ys(e) {
  ut.length && ut[ut.length - 1].add(e);
}
var Ss = Z(false);
var [Bt, Cs] = ws("Bridge", {
  bgColor: "#9147ff",
  textColor: "white",
  shouldLog: Ss
});
var $s = {
  clipboard_text_received: P({
    req_id: v(),
    data: (e) => e === null ? e : v(true)(e)
  }, "clipboard_text_received"),
  custom_method_invoked: P({
    req_id: v(),
    result: (e) => e,
    error: v(true)
  }, "custom_method_invoked"),
  popup_closed: B("popup_closed", (e) => e ? P({
    button_id: (t) => t == null ? void 0 : v()(t)
  })()(e) : {}),
  viewport_changed: P({
    height: pe(),
    width: (e) => e == null ? window.innerWidth : pe()(e),
    is_state_stable: xe(),
    is_expanded: xe()
  }, "viewport_changed")
};
function vs(e) {
  const t = window, [, n] = K(
    // Add "resize" event listener to make sure, we always have fresh viewport information.
    // The desktop version of Telegram is sometimes not sending the "viewport_changed"
    // event. For example, when the Main Button is shown. That's why we should
    // add our own listener to make sure viewport information is always fresh.
    // Issue: https://github.com/Telegram-Mini-Apps/telegram-apps/issues/10
    mt(t, "resize", () => {
      e(["viewport_changed", {
        width: window.innerWidth,
        height: window.innerHeight,
        is_state_stable: true,
        is_expanded: true
      }]);
    }),
    // Add listener, which handles events sent from the Telegram web application and also events
    // generated by the local emitEvent function.
    mt(t, "message", (s) => {
      if (s.source !== t.parent)
        return;
      let o;
      try {
        o = Un()(s.data);
      } catch {
        return;
      }
      const { eventType: r, eventData: a } = o, i = $s[r];
      try {
        const p = i ? i()(a) : a;
        Bt("Event received:", p ? { eventType: r, eventData: p } : { eventType: r }), e([r, p]);
      } catch (p) {
        Cs(
          [
            `An error occurred processing the "${r}" event from the Telegram application.`,
            "Please, file an issue here:",
            "https://github.com/Telegram-Mini-Apps/telegram-apps/issues/new/choose"
          ].join(`
`),
          o,
          p
        );
      }
    })
  );
  return n;
}
var ht = Z();
var fn = Z();
function Qn() {
  return fn() || fn.set(vs(ht.set)), ht;
}
var pt = Z({});
function Yn(e) {
  let t = pt()[e];
  return t || (t = Z(void 0, {
    equals() {
      return false;
    }
  }), Qn().sub((n) => {
    n && n[0] === e && t.set(n[1]);
  }), pt.set({ ...pt(), [e]: t })), t;
}
function C(e, t, n) {
  return Yn(e).sub(t, n);
}
var Ts = "ERR_METHOD_UNSUPPORTED";
var As = "ERR_RETRIEVE_LP_FAILED";
var Rs = "ERR_METHOD_PARAMETER_UNSUPPORTED";
var Kn = "ERR_UNKNOWN_ENV";
var Ps = "ERR_INVOKE_CUSTOM_METHOD_RESPONSE";
var Os = Z("https://web.telegram.org");
function Mt(e, t) {
  Bt("Posting event:", t ? { eventType: e, eventData: t } : { eventType: e });
  const n = window;
  if (Hn(n)) {
    n.TelegramWebviewProxy.postEvent(e, JSON.stringify(t));
    return;
  }
  const s = JSON.stringify({ eventType: e, eventData: t });
  if (_s())
    return n.parent.postMessage(s, Os());
  const { external: o } = n;
  if (P({ notify: jn() })().isValid(o)) {
    o.notify(s);
    return;
  }
  throw new l(Kn);
}
function Dt(e, t, n) {
  n || (n = {});
  const { capture: s } = n, [o, r] = K();
  return new g((a) => {
    (Array.isArray(t) ? t : [t]).forEach((i) => {
      o(
        C(i, (p) => {
          (!s || (Array.isArray(t) ? s({
            event: i,
            payload: p
          }) : s(p))) && a(p);
        })
      );
    }), (n.postEvent || Mt)(e, n.params);
  }, n).finally(r);
}
function Nt(e) {
  return ps()(e);
}
function Zn(e) {
  return Nt(
    e.replace(/^[^?#]*[?#]/, "").replace(/[?#]/g, "&")
  );
}
function Bs() {
  return Zn(window.location.href);
}
function Ms() {
  const e = performance.getEntriesByType("navigation")[0];
  if (!e)
    throw new Error("Unable to get first navigation entry.");
  return Zn(e.name);
}
var Ds = "launchParams";
function Ns() {
  return Nt(A(Ds) || "");
}
function Xn(e) {
  T("launchParams", ls(e));
}
function eo(e) {
  return e instanceof Error ? e.message + (e.cause ? `
  ${eo(e.cause)}` : "") : JSON.stringify(e);
}
function X() {
  const e = [];
  for (const t of [
    // Try to retrieve launch parameters from the current location. This method can return
    // nothing in case, location was changed, and then the page was reloaded.
    Bs,
    // Then, try using the lower level API - window.performance.
    Ms,
    // Finally, try to extract launch parameters from the session storage.
    Ns
  ])
    try {
      const n = t();
      return Xn(n), n;
    } catch (n) {
      e.push(n);
    }
  throw new l(As, [
    "Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?",
    "📖 Refer to docs for more information:",
    "https://docs.telegram-mini-apps.com/packages/telegram-apps-sdk/environment",
    "Collected errors:",
    ...e.map((t) => `— ${eo(t)}`)
  ].join(`
`));
}
function _n(e) {
  if (e === "simple")
    try {
      return X(), true;
    } catch {
      return false;
    }
  return g.withFn(async () => {
    if (Hn(window))
      return true;
    try {
      return await Dt("web_app_request_theme", "theme_changed", { timeout: 100 }), true;
    } catch {
      return false;
    }
  }, e);
}
function bt(e, t) {
  window.dispatchEvent(new MessageEvent("message", {
    data: JSON.stringify({ eventType: e, eventData: t }),
    // We specify window.parent to imitate the case, the parent iframe sent us this event.
    source: window.parent
  }));
}
function ks(e, t) {
  if (typeof t == "string")
    try {
      const { eventType: n } = Un()(t);
      n === "web_app_request_theme" && bt("theme_changed", {
        theme_params: JSON.parse(Ln(e))
      }), n === "web_app_request_viewport" && bt("viewport_changed", {
        width: window.innerWidth,
        height: window.innerHeight,
        is_state_stable: true,
        is_expanded: true
      });
    } catch {
    }
}
function Li(e) {
  var t;
  const n = typeof e == "string" ? Nt(e) : e;
  Xn(n);
  const s = (t = window.TelegramWebviewProxy) == null ? void 0 : t.postEvent;
  window.TelegramWebviewProxy = {
    postEvent(o, r) {
      ks(n.themeParams, JSON.stringify({ eventType: o, eventData: r })), s == null || s(o, r);
    }
  }, Bt("Environment was mocked by the mockTelegramEnv function");
}
function xs() {
  [
    ["TelegramGameProxy_receiveEvent"],
    // Windows Phone.
    ["TelegramGameProxy", "receiveEvent"],
    // Desktop.
    ["Telegram", "WebView", "receiveEvent"]
    // Android and iOS.
  ].forEach((e) => {
    let t = window;
    e.forEach((n, s, o) => {
      if (s === o.length - 1) {
        t[n] = bt;
        return;
      }
      n in t || (t[n] = {}), t = t[n];
    });
  });
}
function Is() {
  ["TelegramGameProxy_receiveEvent", "TelegramGameProxy", "Telegram"].forEach((e) => {
    delete window[e];
  });
}
function G(e, t, n) {
  Yn(e).unsub(t, n);
}
function Ui(e, t) {
  return Qn().sub(e, t);
}
function ji(e, t) {
  ht.unsub(e, t);
}
function to(e) {
  return ({ req_id: t }) => t === e;
}
function mn(e) {
  return e.split(".").map(Number);
}
function Vs(e, t) {
  const n = mn(e), s = mn(t), o = Math.max(n.length, s.length);
  for (let r = 0; r < o; r += 1) {
    const a = n[r] || 0, i = s[r] || 0;
    if (a !== i)
      return a > i ? 1 : -1;
  }
  return 0;
}
function E(e, t) {
  return Vs(e, t) <= 0;
}
function z(e, t, n) {
  if (typeof n == "string") {
    if (e === "web_app_open_link") {
      if (t === "try_instant_view")
        return E("6.4", n);
      if (t === "try_browser")
        return E("7.6", n);
    }
    if (e === "web_app_set_header_color" && t === "color")
      return E("6.9", n);
    if (e === "web_app_close" && t === "return_back")
      return E("7.6", n);
    if (e === "web_app_setup_main_button" && t === "has_shine_effect")
      return E("7.10", n);
  }
  switch (e) {
    case "web_app_open_tg_link":
    case "web_app_open_invoice":
    case "web_app_setup_back_button":
    case "web_app_set_background_color":
    case "web_app_set_header_color":
    case "web_app_trigger_haptic_feedback":
      return E("6.1", t);
    case "web_app_open_popup":
      return E("6.2", t);
    case "web_app_close_scan_qr_popup":
    case "web_app_open_scan_qr_popup":
    case "web_app_read_text_from_clipboard":
      return E("6.4", t);
    case "web_app_switch_inline_query":
      return E("6.7", t);
    case "web_app_invoke_custom_method":
    case "web_app_request_write_access":
    case "web_app_request_phone":
      return E("6.9", t);
    case "web_app_setup_settings_button":
      return E("6.10", t);
    case "web_app_biometry_get_info":
    case "web_app_biometry_open_settings":
    case "web_app_biometry_request_access":
    case "web_app_biometry_request_auth":
    case "web_app_biometry_update_token":
      return E("7.2", t);
    case "web_app_setup_swipe_behavior":
      return E("7.7", t);
    case "web_app_share_to_story":
      return E("7.8", t);
    case "web_app_setup_secondary_button":
    case "web_app_set_bottom_bar_color":
      return E("7.10", t);
    default:
      return [
        "iframe_ready",
        "iframe_will_reload",
        "web_app_close",
        "web_app_data_send",
        "web_app_expand",
        "web_app_open_link",
        "web_app_ready",
        "web_app_request_theme",
        "web_app_request_viewport",
        "web_app_setup_main_button",
        "web_app_setup_closing_behavior"
      ].includes(e);
  }
}
function Ls(e, t) {
  t || (t = "strict");
  const n = typeof t == "function" ? t : (s) => {
    const { method: o, version: r } = s;
    let a, i;
    if ("param" in s ? (a = `Parameter "${s.param}" of "${o}" method is unsupported in Mini Apps version ${r}`, i = Rs) : (a = `Method "${o}" is unsupported in Mini Apps version ${r}`, i = Ts), t === "strict")
      throw new l(i, a);
    return console.warn(a);
  };
  return (s, o) => z(s, e) ? ds(o) && s === "web_app_set_header_color" && "color" in o && !z(s, "color", e) ? n({ version: e, method: s, param: "color" }) : Mt(s, o) : n({ version: e, method: s });
}
function Us(e, t, n, s) {
  return Dt("web_app_invoke_custom_method", "custom_method_invoked", {
    ...s || {},
    params: { method: e, params: t, req_id: n },
    capture: to(n)
  }).then(({ result: o, error: r }) => {
    if (r)
      throw new l(Ps, r);
    return o;
  });
}
function js() {
  return performance.getEntriesByType("navigation")[0];
}
function M() {
  const e = js();
  return !!e && e.type === "reload";
}
var J;
function Hs(e, t) {
  J && J.set(e, t) || t();
}
function qs(e) {
  if (J)
    return e();
  J = /* @__PURE__ */ new Map();
  try {
    e();
  } finally {
    J.forEach((t) => t()), J = void 0;
  }
}
function u(e, t) {
  t || (t = {});
  const n = t.equals || Object.is;
  let s = [], o = e;
  const r = (c) => {
    if (!n(o, c)) {
      const f = o;
      o = c, Hs(p, () => {
        [...s].forEach(([b, w]) => {
          b(c, f), w && i(b, true);
        });
      });
    }
  };
  function a(c) {
    const f = typeof c != "object" ? { once: c } : c;
    return {
      once: f.once || false,
      signal: f.signal || false
    };
  }
  const i = (c, f) => {
    const b = a(f), w = s.findIndex(([I, S]) => I === c && S.once === b.once && S.signal === b.signal);
    w >= 0 && s.splice(w, 1);
  }, p = Object.assign(
    function() {
      return Ws(p), o;
    },
    {
      destroy() {
        s = [];
      },
      set: r,
      reset() {
        r(e);
      },
      sub(c, f) {
        return s.push([c, a(f)]), () => i(c, f);
      },
      unsub: i,
      unsubAll() {
        s = s.filter((c) => c[1].signal);
      }
    }
  );
  return p;
}
var se = [];
function Ws(e) {
  se.length && se[se.length - 1].add(e);
}
function m(e, t) {
  let n = /* @__PURE__ */ new Set(), s;
  function o() {
    return s || (s = u(a(), t));
  }
  function r() {
    o().set(a());
  }
  function a() {
    n.forEach((c) => {
      c.unsub(r, { signal: true });
    });
    const i = /* @__PURE__ */ new Set();
    let p;
    se.push(i);
    try {
      p = e();
    } finally {
      se.pop();
    }
    return i.forEach((c) => {
      c.sub(r, { signal: true });
    }), n = i, p;
  }
  return Object.assign(function() {
    return o()();
  }, {
    destroy() {
      o().destroy();
    },
    sub(...i) {
      return o().sub(...i);
    },
    unsub(...i) {
      o().unsub(...i);
    },
    unsubAll(...i) {
      o().unsubAll(...i);
    }
  });
}
var zs = u(/* @__PURE__ */ (() => {
  let e = 0;
  return () => (e += 1).toString();
})());
var no = u(Mt);
var V = u("0.0");
function Gs(e) {
  e || (e = {});
  const { postEvent: t } = e, n = e.version || X().version;
  V.set(n), no.set(
    typeof t == "function" ? t : Ls(n)
  );
}
function oo() {
  return zs()();
}
function ee(e, t, n) {
  return Us(e, t, oo(), {
    ...n || {},
    postEvent: d
  });
}
var D = (e, t, n) => (n || (n = {}), n.postEvent || (n.postEvent = d), Dt(e, t, n));
var d = (e, t) => no()(e, t);
function N(e) {
  return m(() => z(e, V()));
}
var ne = "ERR_POPUP_INVALID_PARAMS";
var kt = "ERR_INVALID_URL";
var Fs = "ERR_INVALID_SLUG";
var Js = "ERR_DATA_INVALID_SIZE";
var Qs = "ERR_ACCESS_DENIED";
var Le = "ERR_ALREADY_REQUESTING";
var xt = "ERR_ALREADY_OPENED";
var Ys = "ERR_ALREADY_MOUNTING";
var Ks = "ERR_VARS_ALREADY_BOUND";
var Zs = "ERR_NOT_AVAILABLE";
var Xs = "ERR_NOT_INITIALIZED";
var hn = "ERR_NOT_SUPPORTED";
var er = "ERR_NOT_MOUNTED";
function bn() {
  return typeof window > "u";
}
function k(e, t, { isSupported: n, isMounted: s, component: o, supports: r } = {}) {
  const a = `${o ? `${o}.` : ""}${e}()`;
  n = n ? Array.isArray(n) || typeof n == "object" && "any" in n ? n : [n] : void 0;
  function i(h) {
    if (r) {
      const _ = r[h];
      return z(_[0], _[1], V());
    }
    return true;
  }
  const p = () => {
    if (!n)
      return;
    const h = `it is unsupported in Mini Apps version ${V()}`;
    function _($) {
      return typeof $ == "string" ? z($, V()) ? void 0 : h : $.fn() ? void 0 : $.error;
    }
    if (Array.isArray(n)) {
      for (const $ of n) {
        const un = _($);
        if (un)
          return un;
      }
      return;
    }
    let W;
    for (const $ of n.any)
      if (W = _($), !W)
        return;
    return h;
  }, c = (...h) => {
    if (r) {
      for (const _ in r)
        if (r[_][2](...h) && !i(_))
          return `option ${_} is not supported in Mini Apps version ${V()}`;
    }
  }, f = m(() => !p()), b = m(() => V() !== "0.0"), w = m(() => !s || s()), I = m(
    () => _n("simple") && !bn() && b() && f() && w()
  );
  let S;
  if (r) {
    S = {};
    for (const h in r)
      S[h] = m(() => i(h));
  }
  return Object.assign(
    (...h) => {
      const _ = `Unable to call the ${a} ${o ? "method" : "function"}:`;
      if (bn() || !_n("simple"))
        throw new l(
          Kn,
          `${_} it can't be called outside Mini Apps`
        );
      if (!b())
        throw new l(
          Xs,
          `${_} the SDK was not initialized. Use the SDK init() function`
        );
      const W = p();
      if (W)
        throw new l(hn, `${_} ${W}`);
      const $ = c(...h);
      if ($)
        throw new l(hn, `${_} ${$}`);
      if (!w())
        throw new l(
          er,
          `${_} the component is not mounted. Use the ${o}.mount() method`
        );
      return t(...h);
    },
    t,
    {
      isAvailable: I,
      ifAvailable(...h) {
        return I() ? t(...h) : void 0;
      }
    },
    n ? {
      isSupported: f
    } : {},
    S ? {
      supports: S
    } : {}
  );
}
function Ue(e, t) {
  return t || (t = {}), (n, s, o, r) => k(n, s, {
    ...t,
    isSupported: o || t.isSupported,
    supports: r,
    component: e
  });
}
function te(e, t, n) {
  return Ue(e, { isSupported: n, isMounted: t });
}
function R(e, t) {
  return Ue(e, { isSupported: t });
}
var je = "web_app_setup_back_button";
var so = "back_button_pressed";
var He = "backButton";
var gt = u(false);
var le = u(false);
var tr = N(je);
var ro = te(He, le, je);
var It = R(He, je);
var nr = ro("hide", () => {
  Vt(false);
});
var or = It("mount", () => {
  le() || (Vt(M() && A(He) || false), le.set(true));
});
function Vt(e) {
  e !== gt() && (d(je, { is_visible: e }), T(He, e), gt.set(e));
}
var sr = It(
  "onClick",
  (e) => C(so, e)
);
var rr = It(
  "offClick",
  (e) => {
    G(so, e);
  }
);
var ar = ro("show", () => {
  Vt(true);
});
function ir() {
  le.set(false);
}
var Hi = Object.freeze(Object.defineProperty({
  __proto__: null,
  hide: nr,
  isMounted: le,
  isSupported: tr,
  isVisible: gt,
  mount: or,
  offClick: rr,
  onClick: sr,
  show: ar,
  unmount: ir
}, Symbol.toStringTag, { value: "Module" }));
function ao(e, t, n, {
  isMounting: s,
  isMounted: o,
  mountError: r
}) {
  return (a) => g.withFn(async (i) => {
    if (o())
      return;
    if (s())
      throw new l(
        Ys,
        `The ${e} component is already mounting`
      );
    s.set(true);
    let p;
    try {
      p = [true, await t({ abortSignal: i })];
    } catch (c) {
      p = [false, c];
    }
    qs(() => {
      if (s.set(false), o.set(true), p[0])
        n(p[1]);
      else {
        const c = p[1];
        throw r.set(c), c;
      }
    });
  }, a);
}
var j = Ue;
var qe = u();
var Te = u(false);
var Ae = u(false);
var We = u(false);
var io = u(false);
var co = u(void 0);
var cr = m(() => {
  const e = qe();
  return e && e.available;
});
function Lt(e) {
  return e.available ? {
    available: true,
    tokenSaved: e.token_saved,
    deviceId: e.device_id,
    accessRequested: e.access_requested,
    type: e.type,
    accessGranted: e.access_granted
  } : {
    available: false
  };
}
var gn = "web_app_biometry_get_info";
var ur = k(
  "requestBiometry",
  (e) => D(gn, "biometry_info_received", e).then(Lt),
  {
    isSupported: gn
  }
);
var ze = "web_app_biometry_request_auth";
var pr = "web_app_biometry_request_access";
var lr = "web_app_biometry_open_settings";
var dr = "web_app_biometry_update_token";
var Ut = "biometry_info_received";
var Y = "biometry";
var fr = N(ze);
var _r = j(Y);
var mr = R(Y, ze);
var jt = te(Y, We, ze);
function uo() {
  throw new l(Zs, "Biometry is not available");
}
var hr = jt(
  "authenticate",
  (e) => g.withFn(async (t) => {
    if (Te())
      throw new l(Le, "Authentication is already in progress");
    const n = qe();
    (!n || !n.available) && uo(), Te.set(true);
    try {
      const s = await D(
        ze,
        "biometry_auth_requested",
        {
          abortSignal: t,
          params: {
            reason: ((e || {}).reason || "").trim()
          }
        }
      ), { token: o } = s;
      return typeof o == "string" && Ge({ ...n, token: o }), s;
    } finally {
      Te.set(false);
    }
  }, e)
);
var br = mr("openSettings", () => {
  d(lr);
});
var gr = jt(
  "requestAccess",
  (e) => g.withFn(async (t) => {
    if (Ae())
      throw new l(Le, "Access request is already in progress");
    Ae.set(true);
    try {
      const n = await D(pr, Ut, {
        abortSignal: t,
        params: { reason: (e || {}).reason || "" }
      }).then(Lt);
      return n.available || uo(), Ge(n), n.accessGranted;
    } finally {
      Ae.set(false);
    }
  }, e)
);
var wr = _r(
  "mount",
  ao(
    Y,
    (e) => {
      const t = M() && A(Y);
      return t || ur(e);
    },
    (e) => {
      C(Ut, po), Ge(e);
    },
    { isMounted: We, mountError: co, isMounting: io }
  )
);
var po = (e) => {
  Ge(Lt(e));
};
function Ge(e) {
  qe.set(e), T(Y, e);
}
function Er() {
  G(Ut, po), We.set(false);
}
var yr = jt(
  "updateToken",
  (e) => (e || (e = {}), D(dr, "biometry_token_updated", {
    ...e,
    params: {
      token: e.token || "",
      reason: e.reason
    }
  }).then((t) => t.status))
);
var qi = Object.freeze(Object.defineProperty({
  __proto__: null,
  authenticate: hr,
  isAuthenticating: Te,
  isAvailable: cr,
  isMounted: We,
  isMounting: io,
  isRequestingAccess: Ae,
  isSupported: fr,
  mount: wr,
  mountError: co,
  openSettings: br,
  requestAccess: gr,
  state: qe,
  unmount: Er,
  updateToken: yr
}, Symbol.toStringTag, { value: "Module" }));
function Fe(e, t) {
  return Ue(e, { isMounted: t });
}
var Je = "closingBehavior";
var wt = u(false);
var de = u(false);
var lo = Fe(Je, de);
var Sr = j(Je);
var Cr = lo("disableConfirmation", () => {
  Ht(false);
});
var $r = lo("enableConfirmation", () => {
  Ht(true);
});
var vr = Sr("mount", () => {
  de() || (Ht(
    M() && A(Je) || false
  ), de.set(true));
});
function Ht(e) {
  e !== wt() && (d("web_app_setup_closing_behavior", { need_confirmation: e }), T(Je, e), wt.set(e));
}
function Tr() {
  de.set(false);
}
var Wi = Object.freeze(Object.defineProperty({
  __proto__: null,
  disableConfirmation: Cr,
  enableConfirmation: $r,
  isConfirmationEnabled: wt,
  isMounted: de,
  mount: vr,
  unmount: Tr
}, Symbol.toStringTag, { value: "Module" }));
var fo = "web_app_invoke_custom_method";
var Qe = R("cloudStorage", fo);
var Ar = N(fo);
var Rr = Qe("deleteItem", (e, t) => {
  const n = Array.isArray(e) ? e : [e];
  return n.length ? ee("deleteStorageValues", { keys: n }, t).then() : g.resolve();
});
function Pr(e, t) {
  const n = Array.isArray(e) ? e : [e];
  return n.length ? ee("getStorageValues", { keys: n }, t).then((s) => {
    const o = Ne(
      Object.fromEntries(n.map((r) => [r, L()]))
    )()(s);
    return Array.isArray(e) ? o : o[e];
  }) : g.resolve(typeof e == "string" ? "" : {});
}
var Or = Qe("getItem", Pr);
var Br = Qe("getKeys", (e) => ee("getStorageKeys", {}, e).then(Zo(L())()));
var Mr = Qe("setItem", (e, t, n) => ee("saveStorageValue", {
  key: e,
  value: t
}, n).then());
var zi = Object.freeze(Object.defineProperty({
  __proto__: null,
  deleteItem: Rr,
  getItem: Or,
  getKeys: Br,
  isSupported: Ar,
  setItem: Mr
}, Symbol.toStringTag, { value: "Module" }));
var $e = "web_app_trigger_haptic_feedback";
var qt = R("hapticFeedback", $e);
var Dr = N($e);
var Nr = qt(
  "impactOccurred",
  (e) => {
    d($e, {
      type: "impact",
      impact_style: e
    });
  }
);
var kr = qt(
  "notificationOccurred",
  (e) => {
    d($e, {
      type: "notification",
      notification_type: e
    });
  }
);
var xr = qt(
  "selectionChanged",
  () => {
    d($e, { type: "selection_change" });
  }
);
var Gi = Object.freeze(Object.defineProperty({
  __proto__: null,
  impactOccurred: Nr,
  isSupported: Dr,
  notificationOccurred: kr,
  selectionChanged: xr
}, Symbol.toStringTag, { value: "Module" }));
var Wt = u(void 0);
function x(e) {
  return m(() => {
    const t = Wt();
    return t ? t[e] : void 0;
  });
}
var _o = x("authDate");
var mo = x("canSendAfter");
var Ir = m(() => {
  const e = _o(), t = mo();
  return t && e ? new Date(e.getTime() + t * 1e3) : void 0;
});
var Vr = x("chat");
var Lr = x("chatType");
var Ur = x("chatInstance");
var jr = x("hash");
var Hr = x("queryId");
var ho = u();
var qr = x("receiver");
function Wr() {
  const e = X();
  Wt.set(e.initData), ho.set(e.initDataRaw);
}
var zr = x("startParam");
var Gr = x("user");
var Fi = Object.freeze(Object.defineProperty({
  __proto__: null,
  authDate: _o,
  canSendAfter: mo,
  canSendAfterDate: Ir,
  chat: Vr,
  chatInstance: Ur,
  chatType: Lr,
  hash: jr,
  queryId: Hr,
  raw: ho,
  receiver: qr,
  restore: Wr,
  startParam: zr,
  state: Wt,
  user: Gr
}, Symbol.toStringTag, { value: "Module" }));
function Ji(e) {
  return Fo()(e);
}
var zt = "web_app_open_invoice";
var Fr = R("invoice", zt);
var Re = u(false);
var Jr = N(zt);
async function bo(e, t, n) {
  if (Re())
    throw new l(xt, "An invoice is already opened");
  let s;
  if (t === "url") {
    const { hostname: o, pathname: r } = new URL(e, window.location.href);
    if (o !== "t.me")
      throw new l(kt, `Link has unexpected hostname: ${o}`);
    const a = r.match(/^\/(\$|invoice\/)([A-Za-z0-9\-_=]+)$/);
    if (!a)
      throw new l(
        Fs,
        'Expected to receive a link with a pathname in format "/invoice/{slug}" or "/${slug}"'
      );
    [, , s] = a;
  } else
    s = e, n = t;
  return Re.set(true), D(zt, "invoice_closed", {
    ...n,
    params: { slug: s },
    capture: (o) => s === o.slug
  }).then((o) => o.status).finally(() => {
    Re.set(false);
  });
}
var Qr = Fr("open", bo);
var Qi = Object.freeze(Object.defineProperty({
  __proto__: null,
  _open: bo,
  isOpened: Re,
  isSupported: Jr,
  open: Qr
}, Symbol.toStringTag, { value: "Module" }));
function go(e) {
  const t = Bn(e);
  return Math.sqrt(
    [0.299, 0.587, 0.114].reduce((n, s, o) => {
      const r = parseInt(t.slice(1 + o * 2, 1 + (o + 1) * 2), 16);
      return n + r * r * s;
    }, 0)
  ) < 120;
}
var fe = u(false);
var Pe = u(false);
var H = u({});
function y(e) {
  return m(() => H()[e]);
}
var Yr = y("accentTextColor");
var Gt = y("bgColor");
var Ft = y("buttonColor");
var wo = y("buttonTextColor");
var Eo = y("bottomBarBgColor");
var Kr = y("destructiveTextColor");
var Zr = y("headerBgColor");
var Xr = y("hintColor");
var ea = m(() => {
  const { bgColor: e } = H();
  return !e || go(e);
});
var ta = y("linkColor");
var Ie = y("secondaryBgColor");
var na = y("sectionBgColor");
var oa = y("sectionHeaderTextColor");
var sa = y("sectionSeparatorColor");
var ra = y("subtitleTextColor");
var aa = y("textColor");
function F(e) {
  return m(() => Jt()[e]);
}
var re = u({
  hasShineEffect: false,
  isEnabled: true,
  isLoaderVisible: false,
  isVisible: false,
  text: "Continue"
});
var Jt = m(() => {
  const e = re();
  return {
    ...e,
    backgroundColor: e.backgroundColor || Ft() || "#2481cc",
    textColor: e.textColor || wo() || "#ffffff"
  };
});
var _e = u(false);
var ia = F("backgroundColor");
var ca = F("hasShineEffect");
var ua = F("isEnabled");
var pa = F("isLoaderVisible");
var la = F("isVisible");
var da = F("text");
var fa = F("textColor");
var _a = "web_app_setup_main_button";
var yo = "main_button_pressed";
var Ye = "mainButton";
var Qt = j(Ye);
var ma = Fe(Ye, _e);
var ha = Qt("mount", () => {
  if (!_e()) {
    const e = M() && A(Ye);
    e && re.set(e), _e.set(true);
  }
});
var ba = Qt(
  "onClick",
  (e) => C(yo, e)
);
var ga = Qt(
  "offClick",
  (e) => {
    G(yo, e);
  }
);
var wa = ma(
  "setParams",
  (e) => {
    re.set({
      ...re(),
      ...Object.fromEntries(
        Object.entries(e).filter(([, n]) => n !== void 0)
      )
    }), T(Ye, re());
    const t = Jt();
    t.text && d(_a, {
      color: t.backgroundColor,
      has_shine_effect: t.hasShineEffect,
      is_active: t.isEnabled,
      is_progress_visible: t.isLoaderVisible,
      is_visible: t.isVisible,
      text: t.text,
      text_color: t.textColor
    });
  }
);
function Ea() {
  _e.set(false);
}
var Yi = Object.freeze(Object.defineProperty({
  __proto__: null,
  backgroundColor: ia,
  hasShineEffect: ca,
  isEnabled: ua,
  isLoaderVisible: pa,
  isMounted: _e,
  isVisible: la,
  mount: ha,
  offClick: ga,
  onClick: ba,
  setParams: wa,
  state: Jt,
  text: da,
  textColor: fa,
  unmount: Ea
}, Symbol.toStringTag, { value: "Module" }));
function Yt() {
  throw new l(
    Ks,
    "CSS variables are already bound"
  );
}
function ya(e) {
  return Yo()(e);
}
var Ke = "themeParams";
var So = "theme_changed";
var Sa = j(Ke);
var Ca = Fe(Ke, fe);
var $a = Ca(
  "bindCssVars",
  (e) => {
    Pe() && Yt(), e || (e = (s) => `--tg-theme-${Rt(s)}`);
    function t(s) {
      Object.entries(H()).forEach(([o, r]) => {
        r && s(o, r);
      });
    }
    function n() {
      t((s, o) => {
        Pt(e(s), o);
      });
    }
    return n(), H.sub(n), Pe.set(true), () => {
      t(Ot), H.unsub(n), Pe.set(false);
    };
  }
);
var Co = Sa("mount", () => {
  fe() || (C(So, $o), H.set(
    M() && A(Ke) || X().themeParams
  ), fe.set(true));
});
var $o = (e) => {
  const t = ya(e.theme_params);
  H.set(t), T(Ke, t);
};
function va() {
  G(So, $o), fe.set(false);
}
function vo(e) {
  return m(() => {
    const t = e();
    return ce(t) ? t : t === "bg_color" ? Gt() : Ie();
  });
}
var me = u("bg_color");
var Kt = vo(me);
var he = u("bottom_bar_bg_color");
var Zt = m(() => {
  const e = he();
  return ce(e) ? e : e === "bottom_bar_bg_color" ? Eo() || Ie() : e === "secondary_bg_color" ? Ie() : Gt();
});
var be = u("bg_color");
var To = vo(be);
var ge = u(false);
var Oe = u(false);
var Ta = m(() => {
  const e = Kt();
  return e ? go(e) : false;
});
var Ao = m(() => ({
  backgroundColor: me(),
  bottomBarColor: he(),
  headerColor: be()
}));
var Et = "web_app_set_background_color";
var yt = "web_app_set_bottom_bar_color";
var Be = "web_app_set_header_color";
var ve = "miniApp";
var Xt = {
  any: [
    Et,
    yt,
    Be
  ]
};
var Aa = m(() => Xt.any.some((e) => z(e, V())));
var Ro = j(ve);
var Ra = R(ve, Xt);
var Ze = te(ve, ge, Xt);
var Pa = Ze(
  "bindCssVars",
  (e) => {
    Oe() && Yt();
    const [t, n] = K();
    function s(o, r) {
      function a() {
        Pt(o, r() || null);
      }
      a(), t(r.sub(a), Ot.bind(null, o));
    }
    return e || (e = (o) => `--tg-${Rt(o)}`), s(e("bgColor"), Kt), s(e("bottomBarColor"), Zt), s(e("headerColor"), To), t(() => {
      Oe.set(false);
    }), Oe.set(true), n;
  }
);
var Oa = Ro("close", (e) => {
  d("web_app_close", { return_back: e });
});
var Ba = Ra(
  "mount",
  () => {
    if (!ge()) {
      const e = M() && A(ve);
      Co(), Po.ifAvailable(e ? e.backgroundColor : "bg_color"), Oo.ifAvailable(e ? e.bottomBarColor : "bottom_bar_bg_color"), Bo.ifAvailable(e ? e.headerColor : "bg_color"), ge.set(true);
    }
  }
);
var Ma = Ro("ready", () => {
  d("web_app_ready");
});
function en() {
  T(ve, Ao());
}
var Po = Ze(
  "setBackgroundColor",
  (e) => {
    e !== me() && (d(Et, { color: e }), me.set(e), en());
  },
  Et
);
var Oo = Ze(
  "setBottomBarColor",
  (e) => {
    e !== he() && (d(yt, { color: e }), he.set(e), en());
  },
  yt
);
var Bo = Ze(
  "setHeaderColor",
  (e) => {
    e !== be() && (d(Be, ce(e) ? { color: e } : { color_key: e }), be.set(e), en());
  },
  Be,
  {
    rgb: [Be, "color", ce]
  }
);
function Da() {
  ge.set(false);
}
var Ki = Object.freeze(Object.defineProperty({
  __proto__: null,
  backgroundColor: me,
  backgroundColorRGB: Kt,
  bindCssVars: Pa,
  bottomBarColor: he,
  bottomBarColorRGB: Zt,
  close: Oa,
  headerColor: be,
  headerColorRGB: To,
  isCssVarsBound: Oe,
  isDark: Ta,
  isMounted: ge,
  isSupported: Aa,
  mount: Ba,
  ready: Ma,
  setBackgroundColor: Po,
  setBottomBarColor: Oo,
  setHeaderColor: Bo,
  state: Ao,
  unmount: Da
}, Symbol.toStringTag, { value: "Module" }));
function Na(e) {
  const t = e.message.trim(), n = (e.title || "").trim(), s = e.buttons || [];
  if (n.length > 64)
    throw new l(ne, `Invalid title: ${n}`);
  if (!t || t.length > 256)
    throw new l(ne, `Invalid message: ${t}`);
  if (s.length > 3)
    throw new l(ne, `Invalid buttons count: ${s.length}`);
  return {
    title: n,
    message: t,
    buttons: s.length ? s.map((o, r) => {
      const a = o.id || "";
      if (a.length > 64)
        throw new l(ne, `Button with index ${r} has invalid id: ${a}`);
      if (!o.type || o.type === "default" || o.type === "destructive") {
        const i = o.text.trim();
        if (!i || i.length > 64)
          throw new l(ne, `Button with index ${r} has invalid text: ${i}`);
        return { type: o.type, text: i, id: a };
      }
      return { type: o.type, id: a };
    }) : [{ type: "close", id: "" }]
  };
}
var tn = "web_app_open_popup";
var ka = R("popup", tn);
var Me = u(false);
var xa = N(tn);
var Ia = ka(
  "open",
  async (e) => {
    if (Me())
      throw new l(xt, "A popup is already opened");
    Me.set(true);
    try {
      const { button_id: t = null } = await D(tn, "popup_closed", {
        ...e,
        params: Na(e)
      });
      return t;
    } finally {
      Me.set(false);
    }
  }
);
var Zi = Object.freeze(Object.defineProperty({
  __proto__: null,
  isOpened: Me,
  isSupported: xa,
  open: Ia
}, Symbol.toStringTag, { value: "Module" }));
var Va = "web_app_close_scan_qr_popup";
var nn = "web_app_open_scan_qr_popup";
var La = "scan_qr_popup_closed";
var Ua = "qr_text_received";
var Mo = R("qrScanner", nn);
var St = Mo("close", () => {
  Q.set(false), d(Va);
});
var Q = u(false);
var ja = N(nn);
function Ha(e) {
  return g.withFn((t) => {
    if (Q())
      throw new l(xt, "The QR Scanner is already opened");
    Q.set(true), e || (e = {});
    const { onCaptured: n, text: s, capture: o } = e, [, r] = K(
      // Whenever the scanner was closed for some reason (by a developer or a
      // user), we should resolve the promise with undefined.
      Q.sub(() => {
        a.resolve();
      }),
      // Whenever user closed the scanner, update the isOpened signal state.
      C(La, () => {
        Q.set(false);
      }),
      // Whenever some QR was scanned, we should check if it must be captured.
      C(Ua, (i) => {
        n ? n(i.data) : (!o || o(i.data)) && (a.resolve(i.data), St());
      })
    ), a = new oe({ abortSignal: t }).catch(St).finally(r);
    return (e.postEvent || d)(nn, { text: s }), a;
  }, e);
}
var qa = Mo("open", Ha);
var Xi = Object.freeze(Object.defineProperty({
  __proto__: null,
  close: St,
  isOpened: Q,
  isSupported: ja,
  open: qa
}, Symbol.toStringTag, { value: "Module" }));
function q(e) {
  return m(() => on()[e]);
}
var ae = u({
  hasShineEffect: false,
  isEnabled: true,
  isLoaderVisible: false,
  isVisible: false,
  position: "left",
  text: "Cancel"
});
var on = m(() => {
  const e = ae();
  return {
    ...e,
    backgroundColor: e.backgroundColor || Zt() || "#000000",
    textColor: e.textColor || Ft() || "#2481cc"
  };
});
var we = u(false);
var Wa = q("backgroundColor");
var za = q("hasShineEffect");
var Ga = q("isEnabled");
var Fa = q("isLoaderVisible");
var Ja = q("isVisible");
var Qa = q("position");
var Ya = q("text");
var Ka = q("textColor");
var Xe = "web_app_setup_secondary_button";
var Do = "secondary_button_pressed";
var et = "secondaryButton";
var sn = R(et, Xe);
var Za = te(et, we, Xe);
var Xa = N(Xe);
var ei = sn("mount", () => {
  if (!we()) {
    const e = M() && A(et);
    e && ae.set(e), we.set(true);
  }
});
var ti = sn(
  "onClick",
  (e) => C(Do, e)
);
var ni = sn(
  "offClick",
  (e) => {
    G(Do, e);
  }
);
var oi = Za(
  "setParams",
  (e) => {
    ae.set({
      ...ae(),
      ...Object.fromEntries(
        Object.entries(e).filter(([, n]) => n !== void 0)
      )
    }), T(et, ae());
    const t = on();
    t.text && d(Xe, {
      color: t.backgroundColor,
      has_shine_effect: t.hasShineEffect,
      is_active: t.isEnabled,
      is_progress_visible: t.isLoaderVisible,
      is_visible: t.isVisible,
      position: t.position,
      text: t.text,
      text_color: t.textColor
    });
  }
);
function si() {
  we.set(false);
}
var ec = Object.freeze(Object.defineProperty({
  __proto__: null,
  backgroundColor: Wa,
  hasShineEffect: za,
  isEnabled: Ga,
  isLoaderVisible: Fa,
  isMounted: we,
  isSupported: Xa,
  isVisible: Ja,
  mount: ei,
  offClick: ni,
  onClick: ti,
  position: Qa,
  setParams: oi,
  state: on,
  text: Ya,
  textColor: Ka,
  unmount: si
}, Symbol.toStringTag, { value: "Module" }));
var tt = "web_app_setup_settings_button";
var No = "settings_button_pressed";
var nt = "settingsButton";
var Ct = u(false);
var Ee = u(false);
var ri = N(tt);
var rn = R(nt, tt);
var ko = te(nt, Ee, tt);
var ai = ko("hide", () => {
  an(false);
});
var ii = rn("mount", () => {
  Ee() || (an(M() && A(nt) || false), Ee.set(true));
});
function an(e) {
  e !== Ct() && (d(tt, { is_visible: e }), T(nt, e), Ct.set(e));
}
var ci = rn(
  "onClick",
  (e) => C(No, e)
);
var ui = rn(
  "offClick",
  (e) => {
    G(No, e);
  }
);
var pi = ko("show", () => {
  an(true);
});
function li() {
  Ee.set(false);
}
var tc = Object.freeze(Object.defineProperty({
  __proto__: null,
  hide: ai,
  isMounted: Ee,
  isSupported: ri,
  isVisible: Ct,
  mount: ii,
  offClick: ui,
  onClick: ci,
  show: pi,
  unmount: li
}, Symbol.toStringTag, { value: "Module" }));
var ot = "web_app_setup_swipe_behavior";
var st = "swipeBehavior";
var ye = u(false);
var di = N(ot);
var $t = u(true);
var fi = R(st, ot);
var xo = te(st, ye, ot);
var _i = xo("disableVertical", () => {
  cn(false);
});
var mi = xo("enableVertical", () => {
  cn(true);
});
var hi = fi("mount", () => {
  ye() || (cn(
    M() && A(st) || false,
    true
  ), ye.set(true));
});
function cn(e, t) {
  (e !== $t() || t) && (d(ot, { allow_vertical_swipe: e }), T(st, e), $t.set(e));
}
function bi() {
  ye.set(false);
}
var nc = Object.freeze(Object.defineProperty({
  __proto__: null,
  disableVertical: _i,
  enableVertical: mi,
  isMounted: ye,
  isSupported: di,
  isVerticalEnabled: $t,
  mount: hi,
  unmount: bi
}, Symbol.toStringTag, { value: "Module" }));
var oc = Object.freeze(Object.defineProperty({
  __proto__: null,
  accentTextColor: Yr,
  backgroundColor: Gt,
  bindCssVars: $a,
  bottomBarBgColor: Eo,
  buttonColor: Ft,
  buttonTextColor: wo,
  destructiveTextColor: Kr,
  headerBackgroundColor: Zr,
  hintColor: Xr,
  isCssVarsBound: Pe,
  isDark: ea,
  isMounted: fe,
  linkColor: ta,
  mount: Co,
  secondaryBackgroundColor: Ie,
  sectionBackgroundColor: na,
  sectionHeaderTextColor: oa,
  sectionSeparatorColor: sa,
  state: H,
  subtitleTextColor: ra,
  textColor: aa,
  unmount: va
}, Symbol.toStringTag, { value: "Module" }));
var O = u({
  height: 0,
  width: 0,
  isExpanded: false,
  stableHeight: 0
});
var rt = u(false);
var De = u(false);
var Io = u(false);
var Vo = u(void 0);
function at(e) {
  return m(() => O()[e]);
}
var gi = at("height");
var wi = at("isExpanded");
var Ei = m(() => {
  const e = O();
  return e.height === e.stableHeight;
});
var yi = at("stableHeight");
var Si = at("width");
function Ci(e) {
  return D("web_app_request_viewport", "viewport_changed", e).then((t) => ({
    height: t.height,
    width: t.width,
    isExpanded: t.is_expanded,
    isStable: t.is_state_stable
  }));
}
var Ve = "viewport";
var Lo = j(Ve);
var $i = Fe(Ve, rt);
var vi = $i(
  "bindCssVars",
  (e) => {
    De() && Yt(), e || (e = (s) => `--tg-viewport-${Rt(s)}`);
    const t = ["height", "width", "stableHeight"];
    function n() {
      t.forEach((s) => {
        Pt(e(s), `${O()[s]}px`);
      });
    }
    return n(), O.sub(n), De.set(true), () => {
      t.forEach(Ot), O.unsub(n), De.set(false);
    };
  }
);
var Ti = Lo("expand", () => {
  d("web_app_expand");
});
var Ai = Lo(
  "mount",
  ao(
    Ve,
    (e) => {
      const t = M() && A(Ve);
      if (t)
        return t;
      if ([
        "macos",
        "tdesktop",
        "unigram",
        "webk",
        "weba",
        "web"
      ].includes(X().platform)) {
        const n = window;
        return {
          isExpanded: true,
          height: n.innerHeight,
          width: n.innerWidth,
          stableHeight: n.innerHeight
        };
      }
      return e.timeout || (e.timeout = 1e3), Ci(e).then((n) => ({
        height: n.height,
        isExpanded: n.isExpanded,
        stableHeight: n.isStable ? n.height : O().stableHeight,
        width: n.width
      }));
    },
    (e) => {
      C("viewport_changed", Uo), jo(e);
    },
    { isMounted: rt, isMounting: Io, mountError: Vo }
  )
);
var Uo = (e) => {
  jo({
    height: e.height,
    isExpanded: e.is_expanded,
    stableHeight: e.is_state_stable ? e.height : O().stableHeight,
    width: e.width
  });
};
function jo(e) {
  O.set({
    isExpanded: e.isExpanded,
    height: lt(e.height),
    width: lt(e.width),
    stableHeight: lt(e.stableHeight)
  }), T("viewport", O());
}
function lt(e) {
  return Math.max(e, 0);
}
function Ri() {
  G("viewport_changed", Uo), rt.set(false);
}
var sc = Object.freeze(Object.defineProperty({
  __proto__: null,
  bindCssVars: vi,
  expand: Ti,
  height: gi,
  isCssVarsBound: De,
  isExpanded: wi,
  isMounted: rt,
  isMounting: Io,
  isStable: Ei,
  mount: Ai,
  mountError: Vo,
  stableHeight: yi,
  state: O,
  unmount: Ri,
  width: Si
}, Symbol.toStringTag, { value: "Module" }));
var Pi = j();
var rc = Pi(
  "openLink",
  (e, t) => {
    if (typeof e == "string")
      try {
        e = new URL(e);
      } catch (n) {
        throw new l(kt, `"${e.toString()}" is invalid URL`, n);
      }
    t || (t = {}), d("web_app_open_link", {
      url: e.toString(),
      try_browser: t.tryBrowser,
      try_instant_view: t.tryInstantView
    });
  }
);
var wn = "web_app_open_tg_link";
var Oi = j();
var Bi = Oi(
  "openTelegramLink",
  (e) => {
    const t = e.toString();
    if (!t.match(/^https:\/\/t.me\/.+/))
      throw new l(kt, `"${t}" is invalid URL`);
    if (!z(wn, V())) {
      window.location.href = t;
      return;
    }
    e = new URL(e), d(wn, { path_full: e.pathname + e.search });
  }
);
var Mi = j();
var ac = Mi(
  "shareURL",
  (e, t) => {
    Bi(
      "https://t.me/share/url?" + new URLSearchParams({ url: e, text: t || "" }).toString().replace(/\+/g, "%20")
    );
  }
);
var vt = "web_app_request_phone";
var dt = u(false);
var Di = k(
  "requestPhoneAccess",
  (e) => {
    if (dt())
      throw new l(Le, "Phone access request is currently in progress");
    return dt.set(true), D(vt, "phone_requested", e).then((t) => t.status).finally(() => {
      dt.set(false);
    });
  },
  {
    isSupported: vt
  }
);
function En(e) {
  return e || (e = {}), ee("getRequestedContact", {}, {
    ...e,
    timeout: e.timeout || 5e3
  }).then(
    On({
      contact: Ne({
        userId: ["user_id", ke()],
        phoneNumber: ["phone_number", L()],
        firstName: ["first_name", L()],
        lastName: ["last_name", L(true)]
      })(),
      authDate: ["auth_date", Tt()],
      hash: L()
    })()
  );
}
var ic = k(
  "requestContact",
  (e) => g.withFn(
    async (t) => {
      const n = { abortSignal: t };
      try {
        return await En(n);
      } catch {
      }
      if (await Di(n) !== "sent")
        throw new l(Qs, "User denied access");
      let o = 50;
      for (; !t.aborted; ) {
        try {
          return await En(n);
        } catch {
        }
        await gs(o), o += 50;
      }
      return null;
    },
    e
  ),
  {
    isSupported: vt
  }
);
var yn = "web_app_request_write_access";
var ft = u(false);
var cc = k(
  "requestWriteAccess",
  (e) => {
    if (ft())
      throw new l(Le, "Write access request is currently in progress");
    return ft.set(true), D(yn, "write_access_requested", e).then((t) => t.status).finally(() => {
      ft.set(false);
    });
  },
  {
    isSupported: yn
  }
);
var uc = k(
  "getCurrentTime",
  (e) => ee("getCurrentTime", {}, e).then(Tt()),
  {
    isSupported: "web_app_invoke_custom_method"
  }
);
var Sn = "web_app_read_text_from_clipboard";
var pc = k(
  "readTextFromClipboard",
  (e) => {
    const t = oo();
    return D(Sn, "clipboard_text_received", {
      ...e,
      params: { req_id: t },
      capture: to(t)
    }).then(({ data: n = null }) => n);
  },
  {
    isSupported: Sn
  }
);
var lc = k(
  "sendData",
  (e) => {
    const { size: t } = new Blob([e]);
    if (!t || t > 4096)
      throw new l(Js, t ? "Maximum size of data to send is 4096 bytes" : "Attempted to send empty data");
    d("web_app_data_send", { data: e });
  }
);
var Cn = "web_app_share_to_story";
var dc = k(
  "shareStory",
  (e, t) => {
    t || (t = {}), d(Cn, {
      text: t.text,
      media_url: e,
      widget_link: t.widgetLink
    });
  },
  { isSupported: Cn }
);
var $n = "web_app_switch_inline_query";
var fc = k(
  "switchInlineQuery",
  (e, t) => {
    d($n, {
      query: e,
      chat_types: t || []
    });
  },
  {
    isSupported: [$n, {
      fn: () => !!X().botInline,
      error: "Mini App should be ran in Bot inline mode"
    }]
  }
);
function _c(e) {
  try {
    return { result: e() };
  } catch (t) {
    return { error: t };
  }
}
function mc(e) {
  Gs(e), xs();
  const [t, n] = K(
    C("reload_iframe", () => {
      d("iframe_will_reload"), window.location.reload();
    }),
    Is
  ), { acceptCustomStyles: s = true } = e || {};
  if (s) {
    const o = document.createElement("style");
    o.id = "telegram-custom-styles", document.head.appendChild(o), t(
      C("set_custom_style", (r) => {
        o.innerHTML = r;
      }),
      () => {
        document.head.removeChild(o);
      }
    );
  }
  return d("iframe_ready", { reload_supported: true }), n;
}
export {
  zs as $createRequestId,
  Ss as $debug,
  no as $postEvent,
  Os as $targetOrigin,
  V as $version,
  g as CancelablePromise,
  zn as ERR_ABORTED,
  Qs as ERR_ACCESS_DENIED,
  Ys as ERR_ALREADY_MOUNTING,
  xt as ERR_ALREADY_OPENED,
  Le as ERR_ALREADY_REQUESTING,
  Gn as ERR_CANCELED,
  Ks as ERR_CSS_VARS_ALREADY_BOUND,
  Ps as ERR_CUSTOM_METHOD_ERR_RESPONSE,
  Js as ERR_DATA_INVALID_SIZE,
  Fs as ERR_INVALID_SLUG,
  kt as ERR_INVALID_URL,
  qo as ERR_INVALID_VALUE,
  Rs as ERR_METHOD_PARAMETER_UNSUPPORTED,
  Ts as ERR_METHOD_UNSUPPORTED,
  Zs as ERR_NOT_AVAILABLE,
  Xs as ERR_NOT_INITIALIZED,
  er as ERR_NOT_MOUNTED,
  hn as ERR_NOT_SUPPORTED,
  An as ERR_PARSE,
  ne as ERR_POPUP_INVALID_PARAMS,
  As as ERR_RETRIEVE_LP_FAILED,
  Fn as ERR_TIMED_OUT,
  zo as ERR_UNEXPECTED_TYPE,
  Wo as ERR_UNEXPECTED_VALUE,
  Kn as ERR_UNKNOWN_ENV,
  l as TypedError,
  mt as addEventListener,
  hr as authenticateBiometry,
  Hi as backButton,
  Pa as bindMiniAppCssVars,
  $a as bindThemeParamsCssVars,
  vi as bindViewportCssVars,
  qi as biometry,
  co as biometryMountError,
  qe as biometryState,
  _t as classNames,
  Oa as closeMiniApp,
  St as closeQrScanner,
  Wi as closingBehavior,
  zi as cloudStorage,
  Vs as compareVersions,
  Ls as createPostEvent,
  xs as defineEventHandlers,
  Rr as deleteCloudStorageItem,
  Ot as deleteCssVar,
  Cr as disableClosingConfirmation,
  _i as disableVerticalSwipes,
  bt as emitMiniAppsEvent,
  $r as enableClosingConfirmation,
  mi as enableVerticalSwipes,
  Ti as expandViewport,
  Or as getCloudStorageItem,
  Br as getCloudStorageKeys,
  uc as getCurrentTime,
  Gi as hapticFeedback,
  Nr as hapticFeedbackImpactOccurred,
  kr as hapticFeedbackNotificationOccurred,
  xr as hapticFeedbackSelectionChanged,
  nr as hideBackButton,
  ai as hideSettingsButton,
  mc as init,
  Fi as initData,
  _o as initDataAuthDate,
  mo as initDataCanSendAfter,
  Ir as initDataCanSendAfterDate,
  Vr as initDataChat,
  Ur as initDataChatInstance,
  Lr as initDataChatType,
  jr as initDataHash,
  Hr as initDataQueryId,
  ho as initDataRaw,
  qr as initDataReceiver,
  zr as initDataStartParam,
  Wt as initDataState,
  Gr as initDataUser,
  Qi as invoice,
  Us as invokeCustomMethod,
  Ii as isAbortError,
  Te as isAuthenticatingBiometry,
  le as isBackButtonMounted,
  tr as isBackButtonSupported,
  gt as isBackButtonVisible,
  We as isBiometryMounted,
  io as isBiometryMounting,
  fr as isBiometrySupported,
  Vi as isCanceledError,
  de as isClosingBehaviorMounted,
  wt as isClosingConfirmationEnabled,
  Ar as isCloudStorageSupported,
  go as isColorDark,
  Dr as isHapticFeedbackSupported,
  _s as isIframe,
  Re as isInvoiceOpened,
  Jr as isInvoiceSupported,
  ua as isMainButtonEnabled,
  pa as isMainButtonLoaderVisible,
  _e as isMainButtonMounted,
  la as isMainButtonVisible,
  Oe as isMiniAppCssVarsBound,
  Ta as isMiniAppDark,
  ge as isMiniAppMounted,
  Aa as isMiniAppSupported,
  Me as isPopupOpened,
  xa as isPopupSupported,
  Q as isQrScannerOpened,
  ja as isQrScannerSupported,
  ce as isRGB,
  Jo as isRGBShort,
  Mn as isRecord,
  Ae as isRequestingBiometryAccess,
  dt as isRequestingPhoneAccess,
  ft as isRequestingWriteAccess,
  bn as isSSR,
  Ga as isSecondaryButtonEnabled,
  Fa as isSecondaryButtonLoaderVisible,
  we as isSecondaryButtonMounted,
  Xa as isSecondaryButtonSupported,
  Ja as isSecondaryButtonVisible,
  Ee as isSettingsButtonMounted,
  ri as isSettingsButtonSupported,
  Ct as isSettingsButtonVisible,
  ye as isSwipeBehaviorMounted,
  di as isSwipeBehaviorSupported,
  _n as isTMA,
  Pe as isThemeParamsCssVarsBound,
  ea as isThemeParamsDark,
  fe as isThemeParamsMounted,
  xi as isTimeoutError,
  $t as isVerticalSwipesEnabled,
  De as isViewportCssVarsBound,
  wi as isViewportExpanded,
  rt as isViewportMounted,
  Io as isViewportMounting,
  Ei as isViewportStable,
  Yi as mainButton,
  ia as mainButtonBackgroundColor,
  ca as mainButtonHasShineEffect,
  Jt as mainButtonState,
  da as mainButtonText,
  fa as mainButtonTextColor,
  ki as mergeClassNames,
  Ki as miniApp,
  me as miniAppBackgroundColor,
  he as miniAppBottomBarColor,
  Zt as miniAppBottomBarColorRGB,
  be as miniAppHeaderColor,
  To as miniAppHeaderColorRGB,
  Ma as miniAppReady,
  Ao as miniAppState,
  Li as mockTelegramEnv,
  or as mountBackButton,
  wr as mountBiometry,
  vr as mountClosingBehavior,
  ha as mountMainButton,
  Ba as mountMiniApp,
  ei as mountSecondaryButton,
  ii as mountSettingsButton,
  hi as mountSwipeBehavior,
  Co as mountThemeParams,
  Ai as mountViewport,
  G as off,
  rr as offBackButtonClick,
  ga as offMainButtonClick,
  ni as offSecondaryButtonClick,
  ui as offSettingsButtonClick,
  C as on,
  sr as onBackButtonClick,
  ba as onMainButtonClick,
  ti as onSecondaryButtonClick,
  ci as onSettingsButtonClick,
  br as openBiometrySettings,
  Qr as openInvoice,
  rc as openLink,
  Ia as openPopup,
  qa as openQrScanner,
  Bi as openTelegramLink,
  Ji as parseInitData,
  ya as parseThemeParams,
  Zi as popup,
  Mt as postEvent,
  Xi as qrScanner,
  pc as readTextFromClipboard,
  Is as removeEventHandlers,
  Dt as request,
  ur as requestBiometry,
  gr as requestBiometryAccess,
  ic as requestContact,
  Di as requestPhoneAccess,
  Ci as requestViewport,
  cc as requestWriteAccess,
  Wr as restoreInitData,
  X as retrieveLaunchParams,
  _c as safeCall,
  ec as secondaryButton,
  Wa as secondaryButtonBackgroundColor,
  za as secondaryButtonHasShineEffect,
  Qa as secondaryButtonPosition,
  on as secondaryButtonState,
  Ya as secondaryButtonText,
  Ka as secondaryButtonTextColor,
  lc as sendData,
  Ni as serializeLaunchParams,
  Ko as serializeThemeParams,
  Mr as setCloudStorageItem,
  Pt as setCssVar,
  wa as setMainButtonParams,
  Po as setMiniAppBackgroundColor,
  Oo as setMiniAppBottomBarColor,
  Bo as setMiniAppHeaderColor,
  oi as setSecondaryButtonParams,
  tc as settingsButton,
  dc as shareStory,
  ac as shareURL,
  ar as showBackButton,
  pi as showSettingsButton,
  Ui as subscribe,
  z as supports,
  nc as swipeBehavior,
  fc as switchInlineQuery,
  oc as themeParams,
  Yr as themeParamsAccentTextColor,
  Gt as themeParamsBackgroundColor,
  Eo as themeParamsBottomBarBgColor,
  Ft as themeParamsButtonColor,
  wo as themeParamsButtonTextColor,
  Kr as themeParamsDestructiveTextColor,
  Zr as themeParamsHeaderBackgroundColor,
  Xr as themeParamsHintColor,
  ta as themeParamsLinkColor,
  Ie as themeParamsSecondaryBackgroundColor,
  na as themeParamsSectionBackgroundColor,
  oa as themeParamsSectionHeaderTextColor,
  sa as themeParamsSectionSeparatorColor,
  H as themeParamsState,
  ra as themeParamsSubtitleTextColor,
  aa as themeParamsTextColor,
  Bn as toRGB,
  Pn as toRecord,
  ir as unmountBackButton,
  Er as unmountBiometry,
  Tr as unmountClosingBehavior,
  Ea as unmountMainButton,
  Da as unmountMiniApp,
  si as unmountSecondaryButton,
  li as unmountSettingsButton,
  bi as unmountSwipeBehavior,
  va as unmountThemeParams,
  Ri as unmountViewport,
  ji as unsubscribe,
  yr as updateBiometryToken,
  sc as viewport,
  gi as viewportHeight,
  Vo as viewportMountError,
  yi as viewportStableHeight,
  O as viewportState,
  Si as viewportWidth
};
//# sourceMappingURL=@telegram-apps_sdk.js.map
